name: JMeter Performance Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

jobs:
  performance-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build JMeter Docker image
      run: docker build -t jmeter-test .
      
    - name: Run JMeter Tests
      run: |
        mkdir -p results
        docker run --rm \
          -v "${PWD}/results:/test/results" \
          jmeter-test \
          -n -t /test/k6-api-test-plan.jmx \
          -l /test/results/results.jtl \
          -j /test/results/jmeter.log \
          -e -o /test/results/dashboard

    - name: Comment PR with Results
      if: github.event_name == 'pull_request'
      run: |
        COMMENT="## 🚀 Performance Test Results

        ### Test Summary
        - **Duration**: N/A
        - **Total Requests**: N/A
        - **Error Rate**: 0%

        ### 📊 Detailed Results
        - Download results from the Artifacts section below

        ### 🔍 Quick Links
        - Response Times Graph
        - Throughput Graph
        - Error Analysis

        > Note: Full dashboard will be available after merging to main branch."

        gh auth token ${{ github.token }}
        gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENT"
      env:
        GH_TOKEN: ${{ github.token }}
        GITHUB_TOKEN: ${{ github.token }}

    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-test-results
        path: results/dashboard
        retention-days: 30

    - name: Archive detailed results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-detailed-results
        path: |
          results/results.jtl
          results/jmeter.log
        retention-days: 30

  deploy-pages:
    if: github.ref == 'refs/heads/main'  # Only run on main branch
    needs: performance-test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Download dashboard artifact
      uses: actions/download-artifact@v4
      with:
        name: jmeter-test-results
        path: dashboard

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: dashboard

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
