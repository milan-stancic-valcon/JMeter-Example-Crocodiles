name: JMeter Performance Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Concurrency group to ensure one deployment at a time
concurrency:
  group: "pages"
  cancel-in-progress: false

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

jobs:
  performance-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build JMeter Docker image
      run: docker build -t jmeter-test .
      
    - name: Run JMeter Tests
      run: |
        mkdir -p results
        docker run --rm \
          -v "${PWD}/results:/test/results" \
          jmeter-test \
          -n -t /test/k6-api-test-plan.jmx \
          -l /test/results/results.jtl \
          -j /test/results/jmeter.log \
          -e -o /test/results/dashboard

    - name: Extract Test Metrics
      if: github.event_name == 'pull_request'
      run: |
        # Get average response time from results.jtl (elapsed time is in column 2)
        AVG_RESPONSE=$(awk -F',' 'NR>1 {sum+=$2} END {printf "%.2f", sum/(NR-1)}' results/results.jtl || echo "N/A")
        echo "AVG_RESPONSE=$AVG_RESPONSE" >> $GITHUB_ENV
        
        # Get total requests (subtract header line)
        TOTAL_REQUESTS=$(( $(wc -l < results/results.jtl) - 1 ))
        echo "TOTAL_REQUESTS=$TOTAL_REQUESTS" >> $GITHUB_ENV
        
        # Get success rate
        SUCCESS_COUNT=$(grep -c ",true," results/results.jtl || echo "0")
        SUCCESS_RATE=$(awk -v success="$SUCCESS_COUNT" -v total="$TOTAL_REQUESTS" 'BEGIN {printf "%.2f", (success/total)*100}')
        echo "SUCCESS_RATE=$SUCCESS_RATE" >> $GITHUB_ENV

        # Get repository info for links
        REPO_NAME=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f2)
        echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
        GITHUB_USER=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1)
        echo "GITHUB_USER=$GITHUB_USER" >> $GITHUB_ENV
        echo "PAGES_URL=https://$GITHUB_USER.github.io/$REPO_NAME" >> $GITHUB_ENV

    - name: Comment PR with Results
      if: github.event_name == 'pull_request'
      run: |
        cat << EOF > pr_comment.md
        ## üöÄ Performance Test Results

        ### Test Summary
        - **Average Response Time**: ${AVG_RESPONSE:-N/A} ms
        - **Total Requests**: ${TOTAL_REQUESTS:-N/A}
        - **Success Rate**: ${SUCCESS_RATE:-0}%

        ### üìä Detailed Results
        - [View Full Dashboard](${PAGES_URL})
        - [Download Results](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID})

        ### üîç Quick Links
        - [Response Times Over Time](${PAGES_URL}/content/pages/OverTime.html#responseTimeOverTime)
        - [Throughput Graph](${PAGES_URL}/content/pages/Throughput.html#totalTPS)
        EOF

        gh pr comment ${{ github.event.pull_request.number }} --body-file pr_comment.md
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Pages artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: results/dashboard

    - name: Archive detailed results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-detailed-results
        path: |
          results/results.jtl
          results/jmeter.log
        retention-days: 30

  deploy-pages:
    if: github.ref == 'refs/heads/main'
    needs: performance-test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
